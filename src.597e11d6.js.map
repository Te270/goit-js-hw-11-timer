{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","setInterval","currentDate","Date","now","time","getTimeComponents","getTime","days","hours","mins","secs","refs","fieldDays","textContent","fieldHours","fieldMins","fieldSecs","document","querySelector","console","log","Math","floor","String","padStart","timer1","start"],"mappings":";AA6CA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA7CA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IAUhB,EAAA,KAAA,QAAA,KACNC,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MAGnBC,EAAOC,EAFK,KAAKN,WAAWO,UAAYL,IAGxC,KAAEM,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAASN,EAE/BO,KAAAA,KAAKC,UAAUC,YAAcN,EAC7BI,KAAAA,KAAKG,WAAWD,YAAcL,EAC9BG,KAAAA,KAAKI,UAAUF,YAAcJ,EAC7BE,KAAAA,KAAKK,UAAUH,YAAcH,MApB/BZ,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbY,KAAAA,KAAO,CACVC,UAAWK,SAASC,iBAAiB,KAAKpB,oCAC1CgB,WAAYG,SAASC,iBAAiB,KAAKpB,qCAC3CiB,UAAWE,SAASC,iBAAiB,KAAKpB,oCAC1CkB,UAAWC,SAASC,iBAAiB,KAAKpB,sCAmBhD,SAASO,EAAkBD,GACzBe,QAAQC,IAAIhB,GACRG,IAAAA,EAAOc,KAAKC,MAAMlB,EAAQ,OAC1BI,EAAQa,KAAKC,MAAOlB,EAAQ,MAAyB,MACzDI,EAAQe,OAAOf,GAAOgB,SAAS,EAAG,KAC9Bf,IAAAA,EAAOY,KAAKC,MAAOlB,EAAQ,KAAoB,KACnDK,EAAOc,OAAOd,GAAMe,SAAS,EAAG,KAC5Bd,IAAAA,EAAOW,KAAKC,MAAOlB,EAAQ,IAAc,KAGtC,MAAA,CAAEG,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAF5BA,EAAOa,OAAOb,GAAMc,SAAS,EAAG,MAKlC,MAAMC,EAAS,IAAI7B,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIG,KAAK,kBAGvBuB,EAAOC","file":"src.597e11d6.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.refs = {\n      fieldDays: document.querySelector(`${this.selector} span[data-value=\"days\"]`),\n      fieldHours: document.querySelector(`${this.selector} span[data-value=\"hours\"]`),\n      fieldMins: document.querySelector(`${this.selector} span[data-value=\"mins\"]`),\n      fieldSecs: document.querySelector(`${this.selector} span[data-value=\"secs\"]`),\n    };\n  }\n  start = () => {\n    setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = this.targetDate.getTime() - currentDate;\n\n      const time = getTimeComponents(deltaTime);\n      const { days, hours, mins, secs } = time;\n\n      this.refs.fieldDays.textContent = days;\n      this.refs.fieldHours.textContent = hours;\n      this.refs.fieldMins.textContent = mins;\n      this.refs.fieldSecs.textContent = secs;\n    });\n  };\n}\n\nfunction getTimeComponents(time) {\n  console.log(time);\n  let days = Math.floor(time / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  hours = String(hours).padStart(2, '0');\n  let mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  mins = String(mins).padStart(2, '0');\n  let secs = Math.floor((time % (1000 * 60)) / 1000);\n  secs = String(secs).padStart(2, '0');\n\n  return { days, hours, mins, secs };\n}\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021'),\n});\n\ntimer1.start();\n"]}