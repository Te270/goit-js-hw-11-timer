{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","setInterval","currentDate","Date","now","time","getTimeComponents","console","log","days","Math","floor","hours","String","padStart","mins","secs","getTime","refs","fieldDays","textContent","fieldHours","fieldMins","fieldSecs","document","querySelector","timer1","start"],"mappings":";AA4CA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA5CA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IAUhB,EAAA,KAAA,QAAA,KACNC,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MAGnBC,EAQCC,SAAkBD,GACzBE,QAAQC,IAAIH,GACRI,IAAAA,EAAOC,KAAKC,MAAMN,EAAQ,OAC1BO,EAAQF,KAAKC,MAAON,EAAQ,MAAyB,MACzDO,EAAQC,OAAOD,GAAOE,SAAS,EAAG,KAC9BC,IAAAA,EAAOL,KAAKC,MAAON,EAAQ,KAAoB,KACnDU,EAAOF,OAAOE,GAAMD,SAAS,EAAG,KAC5BE,IAAAA,EAAON,KAAKC,MAAON,EAAQ,IAAc,KAGtC,OAFPW,EAAOH,OAAOG,GAAMF,SAAS,EAAG,KAEzB,CAAEL,KAAAA,EAAMG,MAAAA,EAAOG,KAAAA,EAAMC,KAAAA,GAlBfV,CAFK,KAAKN,WAAWiB,UAAYf,IAGxC,KAAEO,EAAF,MAAQG,EAAR,KAAeG,EAAf,KAAqBC,GAASX,EAE/Ba,KAAAA,KAAKC,UAAUC,YAAcX,EAC7BS,KAAAA,KAAKG,WAAWD,YAAcR,EAC9BM,KAAAA,KAAKI,UAAUF,YAAcL,EAC7BG,KAAAA,KAAKK,UAAUH,YAAcJ,MApB/BjB,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbkB,KAAAA,KAAO,CACVC,UAAWK,SAASC,iBAAiB,KAAK1B,oCAC1CsB,WAAYG,SAASC,iBAAiB,KAAK1B,qCAC3CuB,UAAWE,SAASC,iBAAiB,KAAK1B,oCAC1CwB,UAAWC,SAASC,iBAAiB,KAAK1B,sCA+BhD,MAAM2B,EAAS,IAAI7B,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIG,KAAK,kBAGvBuB,EAAOC","file":"src.7f75150a.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.refs = {\n      fieldDays: document.querySelector(`${this.selector} span[data-value=\"days\"]`),\n      fieldHours: document.querySelector(`${this.selector} span[data-value=\"hours\"]`),\n      fieldMins: document.querySelector(`${this.selector} span[data-value=\"mins\"]`),\n      fieldSecs: document.querySelector(`${this.selector} span[data-value=\"secs\"]`),\n    };\n  }\n  start = () => {\n    setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = this.targetDate.getTime() - currentDate;\n\n      const time = getTimeComponents(deltaTime);\n      const { days, hours, mins, secs } = time;\n\n      this.refs.fieldDays.textContent = days;\n      this.refs.fieldHours.textContent = hours;\n      this.refs.fieldMins.textContent = mins;\n      this.refs.fieldSecs.textContent = secs;\n    });\n    function getTimeComponents(time) {\n      console.log(time);\n      let days = Math.floor(time / (1000 * 60 * 60 * 24));\n      let hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      hours = String(hours).padStart(2, '0');\n      let mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n      mins = String(mins).padStart(2, '0');\n      let secs = Math.floor((time % (1000 * 60)) / 1000);\n      secs = String(secs).padStart(2, '0');\n\n      return { days, hours, mins, secs };\n    }\n  };\n}\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021'),\n});\n\ntimer1.start();\n"]}